---
import Card from "./Base.astro";
import { Icon } from "astro-icon";
import { formatNumber } from "../../lib/utils";
// import unescape from "lodash/unescape";
import type { SourceData } from "../../pages/debug/api/[source].astro";

export interface Props {
  card: SourceData<"reddit", RedditData>;
}

export type RedditData = {
  comments_count: number;
  downvotes_count: number;
  upvote_ratio: number;
  upvotes_count: number;
};

const { card } = Astro.props;

// function guessRedditImageUrl(data: RedditData) {
//   if (data.preview) {
//     return unescape(data.preview.images[0].source.url);
//   }

//   const { thumbnail, url } = data;
//   if (!thumbnail || thumbnail == "self" || thumbnail == "default") {
//     return undefined;
//   }
//   if (url.endsWith(".jpg") || url.endsWith(".png") || url.endsWith(".gif")) {
//     return url;
//   }

//   // if url is youtube.com or youtu.be, return the thumbnail parsed from the url
//   if (url.match(/youtube\.com|youtu\.be/)) {
//     const videoId = url.match(/v=([^&]+)/)?.[1] || url.match(/youtu\.be\/([^&]+)/)?.[1];
//     if (videoId) {
//       return `https://img.youtube.com/vi/${videoId}/hqdefault.jpg`;
//     }
//   }

//   return thumbnail;
// }
---

<Card card={card}>
  <a class="text-orange-400 inline-flex items-center">
    <Icon name="tabler:arrow-up" class="w-4 mr-1" />
    {formatNumber(card.metadata?.upvotes_count - card.metadata?.downvotes_count)}
  </a>
  <a
    class="truncate inline-flex items-center"
    href={`https://reddit.com/r/${card.author_url}`}
    target="_blank"
    rel="noopener ugc"
  >
    <img src="/content/websites/reddit.com.png" class="h-3 mr-2" />
    r/{card.author}
  </a>
</Card>
