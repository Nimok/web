---
export const prerender = false
import Layout from "../../layouts/Layout.astro"
import Widget from "../../components/Widget.astro"
import hero from "../../assets/game/vanguard-base-hero.jpg"
import { Image } from "astro:assets"
import { getPlayer, getPlayerMatches } from "../../lib/_api"
import Box from "../../components/Box.astro"
import Leaderboard from "../../components/widgets/Leaderboard.astro"
import infernals from "../../assets/game/factions/infernals-small.png"
import vanguard from "../../assets/game/factions/vanguard-small.png"
import { formatDuration } from "../../lib/utils"
import MatchPreview from "../../components/widgets/MatchPreview.astro"

const themes = {
  infernals: {
    badge: "bg-red-800/20 border-red-500/50",
    badgeLabel: "text-red-500",
  },
  vanguard: {
    badge: "bg-blue-800/20 border-blue-500/50",
    badgeLabel: "text-blue-500",
  },
  default: {
    badge: "bg-gray-800/20 border-gray-500/50",
    badgeLabel: "text-gray-600",
  },
} as const
type Theme = keyof typeof themes

const playerId = +Astro.params.id!
const player = (await getPlayer(playerId))!
---

<Layout title={player.nickname}>
  <div class="w-full bg-gray-800/50 backdrop-blur-lg border-b border-gray-700/50">
    <div class="mx-auto max-w-screen-md px-4 py-4 gap-4 flex items-center flex-wrap">
      <h1 class="text-2xl text-gray-50 font-bold flex-auto">{player.nickname}</h1>

      <div class="flex flex-wrap gap-4">
        {
          player.leaderboardEntries.map((entry) => (
            <div
              class:list={[
                "border rounded-lg px-4 py-2 flex items-center gap-3 text-sm sm:text-base",
                themes[entry.race as Theme].badge,
              ]}
            >
              <Image
                src={entry.race === "infernals" ? infernals : vanguard}
                alt={entry.race}
                class="size-6 sm:size-10"
              />
              <div>
                <span class:list={["text-xs", themes[entry.race as Theme].badgeLabel]}>Rank</span>
                <p>#{entry.rank}</p>
              </div>
              <div>
                <span class:list={["text-xs", themes[entry.race as Theme].badgeLabel]}>MMR</span>
                <p>{Math.round(entry.mmr)}</p>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </div>
  <section class="relative mx-auto max-w-screen-md px-4 py-8">
    <Widget title="Recent Matches" label="Closed Beta Ranked">
      <div class="-mx-3 sm:-mx-4">
        {player.matches.map((match) => <MatchPreview match={match} mainPlayerId={playerId} />)}
      </div>
    </Widget>
  </section>
</Layout>
