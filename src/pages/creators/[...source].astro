---
export const prerender = false

import CreatorsFilters from "../../components/creators/Filters"
import Card from "../../components/Card.astro"
import Layout from "../../layouts/Layout.astro"
import { fetchCreators } from "../../lib/content"

import redditIcon from "../../assets/social/reddit.svg"
import youtubeIcon from "../../assets/social/youtube.svg"
import twitterIcon from "../../assets/social/twitter.svg"
import instagramIcon from "../../assets/social/instagram.svg"
import redditAvatarDefault from "../../assets/avatars/reddit-default.webp"
import avatarDefault from "../../assets/avatars/default.jpg"

export function getStaticPaths() {
  return [
    { params: { source: "reddit" } },
    { params: { source: "youtube" } },
    { params: { source: "twitter" } },
    { params: { source: "instagram" } },
    { params: { source: undefined } },
  ]
}

function defaultAvatar(source: string) {
  switch (source) {
    case "reddit":
      return redditAvatarDefault
    default:
      return avatarDefault
  }
}

const numberFormatter = Intl.NumberFormat("en", { notation: "compact" })

const { source } = Astro.params
const params = Astro.url.searchParams
const time = params.get("t") || "3m"
const order = params.get("o") || "active"

function parseTime(timeParam: string) {
  switch (timeParam) {
    case "1m":
      return "1 month"
    case "3m":
      return "3 months"
    case "6m":
      return "6 months"
    case "1y":
      return "12 months"
    default:
      return "3 months"
  }
}

function parseOrder(orderParam: string) {
  switch (orderParam) {
    case "popular":
      return "popular"
    case "popular":
      return "recent"
    default:
      return "active"
  }
}

const iconsMap = {
  reddit: redditIcon,
  youtube: youtubeIcon,
  twitter: twitterIcon,
  instagram: instagramIcon,
}

const creatorsMap = await fetchCreators({
  count: source ? 100 : 3,
  time: parseTime(time),
  order: parseOrder(order),
  source,
})
delete creatorsMap.tiktok
delete creatorsMap.news

const sources = source ? [source] : ["youtube", "twitter", "reddit", "instagram"]
---

<Layout title="Creators">
  <section class="relative mx-auto max-w-screen-2xl px-4">
    <div class="mt-8 flex flex-col items-center">
      <h3 class="flex-auto text-center font-display text-4xl font-bold text-white">
        <a href="/creators"> Creators</a>
      </h3>
      <p class="my-4 max-w-prose text-center text-lg">The pillars of every gaming community</p>
    </div>
    <CreatorsFilters client:load path={Astro.url.pathname} time={time} order={order} />
    {
      sources.map((source) => (
        <>
          <div class="mb-12 text-center">
            <a href={`/creators/${source}`}>
              <h4 class="text-3xl font-bold capitalize text-white">
                <img src={iconsMap[source]} class="mr-2 inline-block h-10" />
                {source}
              </h4>
            </a>
          </div>
          <div class="grid grid-cols-1 gap-10 sm:grid-cols-2 lg:grid-cols-3">
            {creatorsMap[source].map((creator) => (
              <div class="flex flex-col">
                <div class="flex">
                  <div class="mb-4 mr-4 flex-shrink-0">
                    <a href={creator.url} target="_blank">
                      <img class="h-16 w-16 rounded-full" src={creator.image_url || defaultAvatar(source)} />
                    </a>
                  </div>
                  <div>
                    <a href={creator.url} target="_blank">
                      <h4 class="text-lg font-bold">{creator.name}</h4>
                    </a>

                    {source === "youtube" ? (
                      <>
                        {creator.metadata && (
                          <p class="my-1 text-gray-300">
                            {numberFormatter.format(creator.metadata.subscribers_count)} subscribers •{" "}
                            {numberFormatter.format(creator.metadata.videos_count)} videos
                          </p>
                        )}
                      </>
                    ) : source === "twitter" ? (
                      <>
                        {creator.metadata && (
                          <p class="my-1 text-gray-300">
                            {numberFormatter.format(creator.metadata.followers_count)} followers •{" "}
                            {numberFormatter.format(creator.metadata.tweets_count)} tweets
                          </p>
                        )}
                      </>
                    ) : (
                      <> </>
                    )}
                    {creator.description && (
                      <p class="mt-1 line-clamp-2 text-gray-100" style="word-break: break-word;">
                        {creator.description}
                      </p>
                    )}
                  </div>
                </div>
                <div class="mt-4 flex flex-grow">
                  <Card data={creator.last_content} />
                </div>
              </div>
            ))}
          </div>
          {sources.length > 1 && (
            <div class="mb-12 pt-6 text-center">
              <a class="text-white hover:text-gray-100" href={`/creators/${source}`}>
                More <span class="capitalize">{source}</span> creators <span aria-hidden="true">→</span>
              </a>
            </div>
          )}
        </>
      ))
    }
  </section>
</Layout>
